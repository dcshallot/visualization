data(car)
data(cars)
plot(cars$dist~cars$speed, # y~x
main="Relationship between car distance & speed", #Plot Title
xlab="Speed (miles per hour)", #X axis title
ylab="Distance travelled (miles)", #Y axis title
xlim=c(0,30),
yaxs="i", #Set y axis style as internal
col="red", #Set the colour of plotting symbol to red
pch=19) #Set the plotting symbol to filled dots
nam.var <- colnames(iris)[-5]
nam.spec <- as.character(iris[1+50*0:2, "Species"])
iris.S <- array(NA, dim = c(50,4,3),
dimnames = list(NULL, nam.var, nam.spec))
for(i in 1:3) iris.S[,,i] <- data.matrix(iris[1:50+50*(i-1), -5])
matplot(iris.S[, "Petal.Length",], iris.S[, "Petal.Width",], pch = "SCV",
col = rainbow(3, start = 0.8, end = 0.1),
sub = paste(c("S", "C", "V"), dimnames(iris.S)[[3]],
sep = "=", collapse= ",  "),
main = "Fisher's Iris Data")
library(car)
library(cars)
class = as.character( iris$Species)
scatterplot( Sepal.Length ~ Sepal.Width ,data = iris ,
groups = class ,
grid=TRUE,
smoother=FALSE, reg.line=FALSE, ellipse=TRUE)
install.packages("car")
l <- aggregate( Sepal.Length ~ Species, data= iris, mean); l # 数据是这样的
x <- barplot( l[,2] ,  col=terrain.colors(3) , xlim=c(0,5), ylim=c(0,8) ,axe=F, names.arg = l[,1] )
y <- as.matrix( l[,2] )
text( x, y+1, labels=l[,2], col="black" ) #柱顶标注，y +n调节标注高度，横放图则调x+n
legend(legend=l[,1], "right", pch=15, col=terrain.colors(3) ) # 图例
l <- table( mtcars$cyl , mtcars$gear);l
par( mfrow= c(2,1))
barplot( l, beside=T, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"), legend=c("cyl=4", "cly=6", "cyl=8"))
barplot( l, beside=F, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"), legend=c("cyl=4", "cly=6", "cyl=8"))
par( mfrow= c(1,1))
```
l <- table( mtcars$cyl , mtcars$gear);l
par( mfrow= c(2,1))
barplot( l, beside=T, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"), legend=c("cyl=4", "cly=6", "cyl=8"))
barplot( l, beside=T, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"), legend=c("cyl=4", "cly=6", "cyl=8"))
barplot( l, beside=F, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"), legend=c("cyl=4", "cly=6", "cyl=8"))
par( mfrow= c(1,1))
l <- aggregate( Sepal.Length ~ Species, data= iris, mean)
l # 数据是这样的
dev.off()
l <- aggregate( Sepal.Length ~ Species, data= iris, mean)
x <- barplot( l[,2] ,  col=terrain.colors(3) ,
xlim=c(0,5), ylim=c(0,8) ,axe=F, names.arg = l[,1] )
y <- as.matrix( l[,2] )
text( x, y+1, labels=l[,2], col="black" ) #柱顶标注，y +n调节标注高度，横放图则调x+n
legend(legend=l[,1], "right", pch=15, col=terrain.colors(3) ) # 图例
l <- table( mtcars$cyl , mtcars$gear);l
par( mfrow= c(2,1))
barplot( l, beside=T, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"),
legend=c("cyl=4", "cly=6", "cyl=8"))
barplot( l, beside=F, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"),
legend=c("cyl=4", "cly=6", "cyl=8"))
par( mfrow= c(1,1))
par( mfrow= c(1,1))
barplot( l, beside=T, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"),
legend=c("cyl=4", "cly=6", "cyl=8"))
barplot( l, beside=F, main = "car tpyes: cyl and gear",
names.arg=c( "gear=3","gear=4","gear=5"),
legend=c("cyl=4", "cly=6", "cyl=8"))
x <- mtcars[order(mtcars$mpg),] # sort by mpg
x$cyl <- factor(x$cyl) # it must be a factor
x$color[x$cyl==4] <- "red"
x$color[x$cyl==6] <- "blue"
x$color[x$cyl==8] <- "darkgreen"
dotchart(x$mpg,labels=row.names(x),cex=.7,groups= x$cyl,
main="Gas Milage for Car Models\ngrouped by cylinder",
xlab="Miles Per Gallon", gcolor="black", color=x$color)
x <- mtcars$mpg
h<-hist(x, breaks=10, col="red", xlab="Miles Per Gallon", prob=F ,
main="Histogram with Normal Curve")
xfit<-seq(min(x),max(x),length=40)
yfit<-dnorm(xfit,mean=mean(x),sd=sd(x)) # 正态分布可以这么画，其他分布参考分布函数
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit, yfit, col="blue", lwd=2)
plot(ecdf(x),verticals = TRUE, do.p = FALSE)
lines(x, pnorm(x, mean(x), sd(x)), col = "red")
qqnorm(x); qqline(x, col = "red")
slices <- c(10, 12, 4, 16, 8)
lbls <- c("US", "UK", "Australia", "Germany", "France")
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),
main="Pie Chart of Countries")
plot(cars$dist~cars$speed, # y~x
main="Relationship between car distance & speed", #Plot Title
xlab="Speed (miles per hour)", #X axis title
ylab="Distance travelled (miles)", #Y axis title
xlim=c(0,30),
yaxs="i", #Set y axis style as internal
col="red", #Set the colour of plotting symbol to red
pch=19) #Set the plotting symbol to filled dots
plot(-4:4, -4:4, type = "p", col="blue")
points(x=c(3,-2,-1,3,2), y=c(1,2,-2,2,3), col = "red")
lines(x=c(3,-2,-1,3,2), y=c(1,2,-2,2,3),col="black")
abline(h=0)
abline(v=0)
abline(a=1,b=1)
abline(lm(mtcars$mpg ~ mtcars$qsec),col="red")
segments(x0=2, y0=-4.5, x1=4, y1=-2, col="red", lty="dotted")
arrows(x0=-4, y0=4, x1=-2, y1=0, length=0.15, angle=30, code=3)
grid(nx=3, ny=5, col = "lightgray", lty = "dotted")
plot(-4:4, -4:4, type = "p", col="blue")
polygon( x=c(3,-2,-1,3,2), y=c(1,2,-2,2,3), col = "red") # 绘制多边形
rect( xleft=c(-4,0), ybottom=c(2,-4),  xright=c(-2,2), ytop=c(4,-2),
col = c("blue", "yellow")) # 绘制两个矩形，并填充颜色
par("lty")
par( mfrow = c(1,2), oma = c(0,0,2,0)) # oma outer margine
with( airquality, {
plot( Wind, Ozone, main = "Ozone and Wind")
plot( Solar.R, Ozone, main = "Ozone and Solar Radiation")
mtext( "Ozone and Weather in New York City", outer = TRUE)
})
dev.off()
